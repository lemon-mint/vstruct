import 'package:primitive/primitive.dart';
import 'dart:typed_data';

// Code generated by vstruct. DO NOT EDIT.
// Package Name: main

enum Speices {
	Human,
	Elf,
	Orc,
	Dwarf,
	Gnome,
	Halfling,
	HalfElf,
	HalfOrc,
	Dragonborn,
	Tiefling,
	Gnoll,
	Goblin,
}

enum ItemType {
	Weapon,
	Armor,
	Potion,
}

class Coordinate {
  Uint8List __vstruct__buf = Uint8List(0);

  Coordinate(I64 X, I64 Y) {
    int __vstruct__size = 16;
    __vstruct__buf = Uint8List(__vstruct__size);
    __vstruct__buf = Serialize_Coordinate(__vstruct__buf, X, Y);
  }

  int get lengthInBytes => __vstruct__buf.lengthInBytes;
}

class Item {
  Uint8List __vstruct__buf = Uint8List(0);

  Item(ItemType Type, I64 Damage, I64 Armor, String Name) {
    int __vstruct__size = 25 + Name.length;
    __vstruct__buf = Uint8List(__vstruct__size);
    __vstruct__buf = Serialize_Item(__vstruct__buf, Type, Damage, Armor, Name);
  }

  int get lengthInBytes => __vstruct__buf.lengthInBytes;
}

class Inventory {
  Uint8List __vstruct__buf = Uint8List(0);

  Inventory(Item RightHand, Item LeftHand) {
    int __vstruct__size = 16 + RightHand.lengthInBytes + LeftHand.lengthInBytes;
    __vstruct__buf = Uint8List(__vstruct__size);
    __vstruct__buf = Serialize_Inventory(__vstruct__buf, RightHand, LeftHand);
  }

  int get lengthInBytes => __vstruct__buf.lengthInBytes;
}

class Entity {
  Uint8List __vstruct__buf = Uint8List(0);

  Entity(Speices Type, Coordinate Position, I64 Hp, UUID Id, Inventory Inventory) {
    int __vstruct__size = 41 + Id.length + Inventory.lengthInBytes;
    __vstruct__buf = Uint8List(__vstruct__size);
    __vstruct__buf = Serialize_Entity(__vstruct__buf, Type, Position, Hp, Id, Inventory);
  }

  int get lengthInBytes => __vstruct__buf.lengthInBytes;
}

typedef UUID = String;

